[{"/Users/rajeski/Documents/c19/src/index.js":"1","/Users/rajeski/Documents/c19/src/App.js":"2","/Users/rajeski/Documents/c19/src/components/index.js":"3","/Users/rajeski/Documents/c19/src/components/CountryPicker/CountryPicker.jsx":"4","/Users/rajeski/Documents/c19/src/components/Cards/Cards.jsx":"5","/Users/rajeski/Documents/c19/src/components/Chart/Chart.jsx":"6","/Users/rajeski/Documents/c19/src/api/index.js":"7"},{"size":147,"mtime":1607612423946,"results":"8","hashOfConfig":"9"},{"size":924,"mtime":1607878420042,"results":"10","hashOfConfig":"9"},{"size":173,"mtime":1607614460921,"results":"11","hashOfConfig":"9"},{"size":955,"mtime":1607878087242,"results":"12","hashOfConfig":"9"},{"size":2669,"mtime":1607784450453,"results":"13","hashOfConfig":"9"},{"size":1883,"mtime":1607966476845,"results":"14","hashOfConfig":"9"},{"size":1100,"mtime":1607962279688,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hp4zaw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rajeski/Documents/c19/src/index.js",[],["33","34"],"/Users/rajeski/Documents/c19/src/App.js",[],"/Users/rajeski/Documents/c19/src/components/index.js",[],"/Users/rajeski/Documents/c19/src/components/CountryPicker/CountryPicker.jsx",["35"],"import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl, StylesProvider } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ( { handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n\n    return (\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value='global'>Global</option>    \n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}       \n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","/Users/rajeski/Documents/c19/src/components/Cards/Cards.jsx",["36"],"import { configure } from '@testing-library/react';\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'; \nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if(!confirmed) {\n        return 'Loading... ';\n    }\n    \n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' /> \n                            </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of active COVID-19 Cases</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' /> \n                            </Typography>\n                            <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of recovered from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' /> \n                            </Typography>\n                            <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","/Users/rajeski/Documents/c19/src/components/Chart/Chart.jsx",["37"],"/Users/rajeski/Documents/c19/src/api/index.js",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":37,"nodeType":"45","messageId":"46","endLine":2,"endColumn":51},{"ruleId":"43","severity":1,"message":"47","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":19},{"ruleId":null,"fatal":true,"severity":2,"message":"48","line":41,"column":5},{"ruleId":"43","severity":1,"message":"49","line":15,"column":15,"nodeType":"45","messageId":"46","endLine":15,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'StylesProvider' is defined but never used.","Identifier","unusedVar","'configure' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 39 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m\u001b[36mconst\u001b[39m barChart \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 41 | \u001b[39m    \u001b[33m?\u001b[39m confirmed (\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mBar\u001b[39m \u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m        data\u001b[33m=\u001b[39m{{\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m            labels\u001b[33m:\u001b[39m [\u001b[32m'Infected'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Recovered'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Deaths'\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m","'modifiedData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]